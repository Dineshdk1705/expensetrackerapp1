{"version":3,"sources":["components/Header.js","context/AppReducer.js","context/GlobalState.js","components/Balance.js","components/IncomeExpenses.js","components/Transaction.js","components/TransactionList.js","components/AddTransaction.js","App.js","index.js"],"names":["Header","style","color","state","action","type","transactions","filter","transaction","id","payload","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","deleteTransaction","addTransaction","Balance","total","useContext","map","amount","reduce","acc","item","toFixed","IncomeExpenses","amounts","income","expense","className","Transaction","sign","text","Math","abs","onClick","TransactionList","hideVar","document","getElementById","display","AddTransaction","useState","setText","setAmount","onSubmit","event","preventDefault","newTransaction","floor","random","htmlFor","onChange","target","placeholder","App","ReactDOM","render"],"mappings":"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","file":"static/js/main.1e4ca138.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport const Header = () => {\r\n  return (\r\n    <div>\r\n      <h2 style={{ color: \"#731cff\" }}>Expense Tracker</h2>\r\n    </div>\r\n  );\r\n};\r\n","export default (state, action) => {\r\n  switch (action.type) {\r\n    case \"DELETE_TRANSACTION\":\r\n      return {\r\n        ...state,\r\n        transactions: state.transactions.filter(\r\n          (transaction) => transaction.id !== action.payload\r\n        ),\r\n      };\r\n\r\n    case \"ADD_TRANSACTION\":\r\n      return {\r\n        ...state,\r\n        transactions: [action.payload, ...state.transactions],\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { createContext, useReducer } from \"react\";\r\nimport AppReducer from \"./AppReducer\";\r\n\r\n//Initial state\r\nconst initialState = {\r\n  transactions: [],\r\n};\r\n\r\n//Create Context\r\nexport const GlobalContext = createContext(initialState);\r\n\r\n//Provider Component\r\nexport const GlobalProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n  //Actions\r\n  function deleteTransaction(id) {\r\n    dispatch({\r\n      type: \"DELETE_TRANSACTION\",\r\n      payload: id,\r\n    });\r\n  }\r\n\r\n  function addTransaction(transaction) {\r\n    dispatch({\r\n      type: \"ADD_TRANSACTION\",\r\n      payload: transaction,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <GlobalContext.Provider\r\n      value={{\r\n        transactions: state.transactions,\r\n        deleteTransaction,\r\n        addTransaction,\r\n      }}\r\n    >\r\n      {children}\r\n    </GlobalContext.Provider>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\n\r\nexport const Balance = () => {\r\n  const { transactions } = useContext(GlobalContext);\r\n\r\n  const amounts = transactions.map((transaction) => transaction.amount);\r\n  const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\r\n\r\n  return (\r\n    <>\r\n      <h4>Your Balance</h4>\r\n      <h1> ₹{total}</h1>\r\n    </>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\n\r\nexport const IncomeExpenses = () => {\r\n  const { transactions } = useContext(GlobalContext);\r\n\r\n  const amounts = transactions.map((transaction) => transaction.amount);\r\n\r\n  const income = amounts\r\n    .filter((item) => item > 0)\r\n    .reduce((acc, item) => (acc += item), 0)\r\n    .toFixed(2);\r\n\r\n  const expense = (\r\n    amounts.filter((item) => item < 0).reduce((acc, item) => (acc += item), 0) *\r\n    -1\r\n  ).toFixed(2);\r\n\r\n  return (\r\n    <div className=\"inc-exp-container\">\r\n      <div>\r\n        <h4>Income</h4>\r\n        <p className=\"money plus\">₹{income}</p>\r\n      </div>\r\n      <div>\r\n        <h4>Expense</h4>\r\n        <p className=\"money minus\">₹{expense}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\n\r\nexport const Transaction = ({ transaction }) => {\r\n  const { deleteTransaction } = useContext(GlobalContext);\r\n\r\n  const sign = transaction.amount < 0 ? \"-\" : \"+\";\r\n\r\n  return (\r\n    <li className={transaction.amount < 0 ? \"minus\" : \"plus\"}>\r\n      {transaction.text}{\" \"}\r\n      <span>\r\n        {sign}₹{Math.abs(transaction.amount)}\r\n      </span>\r\n      <button\r\n        onClick={() => deleteTransaction(transaction.id)}\r\n        className=\"delete-btn\"\r\n      >\r\n        x\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n","import React, { useContext } from 'react';\r\nimport { Transaction } from './Transaction';\r\n\r\nimport { GlobalContext } from '../context/GlobalState';\r\nimport { getByDisplayValue } from '@testing-library/react';\r\n\r\nexport const TransactionList = () => {\r\n    const { transactions } = useContext(GlobalContext);\r\n\r\nlet hideVar=true;\r\n        function hideHistory(){\r\n            if(hideVar){\r\n                document.getElementById(\"transactionList-id\").style.display='none';\r\n                hideVar = false;\r\n            }else{\r\n                document.getElementById(\"transactionList-id\").style.display='block';\r\n                hideVar = true;\r\n            }\r\n        }\r\n\r\n    return (\r\n        <>\r\n           <h3 id=\"history-h3-id\" onClick={hideHistory}>History</h3>\r\n           <ul id=\"transactionList-id\" className=\"list\">\r\n                {transactions.map(transaction => (<Transaction key={transaction.id} transaction={transaction} />))}     \r\n           </ul>\r\n\r\n        </>\r\n    )\r\n}\r\n","import React, { useState, useContext } from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\n\r\nexport const AddTransaction = () => {\r\n  const [text, setText] = useState(\"\");\r\n  const [amount, setAmount] = useState(0);\r\n\r\n  const { addTransaction } = useContext(GlobalContext);\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const newTransaction = {\r\n      id: Math.floor(Math.random() * 100000000),\r\n      text,\r\n      amount: +amount,\r\n    };\r\n\r\n    addTransaction(newTransaction);\r\n    setText(\"\");\r\n    setAmount(0);\r\n  };\r\n\r\n  function visibleHistory() {\r\n    document.getElementById(\"transactionList-id\").style.display = \"block\";\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h3>Add new transaction</h3>\r\n      <form onSubmit={onSubmit}>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"text\">Text</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"input-item\"\r\n            value={text}\r\n            onChange={(event) => setText(event.target.value)}\r\n            placeholder=\"Enter text...\"\r\n          />\r\n        </div>\r\n        <div className=\"form-control\">\r\n          <label htmlFor=\"amount\">\r\n            Amount\r\n            <br />\r\n          </label>\r\n          {/* (negative - expense, positive - income)  */}\r\n\r\n          <input\r\n            type=\"number\"\r\n            className=\"input-amount\"\r\n            value={amount}\r\n            onChange={(event) => setAmount(event.target.value)}\r\n            placeholder=\"Enter amount...\"\r\n          />\r\n          <div>\r\n            <button className=\"btn\" onClick={visibleHistory}>\r\n              Add transaction\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\nimport { Header } from \"./components/Header\";\nimport { Balance } from \"./components/Balance\";\nimport { IncomeExpenses } from \"./components/IncomeExpenses\";\nimport { TransactionList } from \"./components/TransactionList\";\nimport { AddTransaction } from \"./components/AddTransaction\";\n\nimport { GlobalProvider } from \"./context/GlobalState\";\n\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <Header />\n      <div className=\"container\">\n        <Balance />\n        <IncomeExpenses />\n        <TransactionList />\n        <AddTransaction />\n      </div>\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n"],"sourceRoot":""}